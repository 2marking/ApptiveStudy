#1-1. short, int, long 차이점
 : 표현할 수 있는 정수의 범위가 각각 다름
// short < int < long 순으로 더 넓은 범위의 정수를 표현
// long > int > short 순으로 더 적은 메모리를 사용

	* short 타입으로 표현 가능 범위 : -32768 ~ +32767
	* int 타입으로 표현 가능 범위 : -2147483648 ~ +2147483647
	* long 타입으로 표현 가능 범위 : -9223372036854775808 ~ +9223372036854775807


#1-2. float, double 차이점
 : 표현할 수 있는 수의 범위와 정확도가 서로 다름
// float < double 순으로 더 넓은 범위의 수를 표현, 더 높은 정확도로 수를 표현
// double > float 순으로 더 적은 메모리를 사용

	* float 타입으로 표현 가능 범위 : -126 ~ +127
	* double 타입으로 표현 가능 범위 : -1022 ~ +1023


#1-3. char, String 차이점 알아오기
 : char은 문자(‘ ’)를, String은 문자열(“ “)을 저장한다
 : char은 프리미티브 타입의 데이터 타입, String은 클래스 타입 // 문자열은 모두 String 객체가 됨
	* char 타입 - 0~65535까지의 정수를 담을 수 있음


#2-1. 캡슐화라는 것은 무엇인가?
 : 데이터를 보호하기 위해 접근 제어 수식어를 통하여 다른 객체의 접근을 제한하는 것
	* public
	 : 클래스와 인터페이스를 패키지 외부에서 사용할 수 있도록 함.
	* protected
	 : 클래스의 구성요소에만 사용 / public, private 의 중간 정도 수준의 접근을 허용 / 패키지 안에서는 자유롭게 사용할 수 있지만, 다른 패키지에서는 서브 클래스 안에서만 사용할 수 있음
	* private
	 : 클래스의 구성요소에만 사용 / 클래스 안에서만 사용가능. 외부에서 사용 불가.

	* 오버라이드하는 메소드는 상속받은 메소드의 접근 허용 범위보다 같거나 더 넓은 범위의 접근을 허용해야 한다.
	Ex) 상속받은 메소드 - protected 메소드이면, 오버라이드 메소드 = protected / public키워드 중 하나를 사용해야 함
			- private 키워드를 사용하거나 접근 제어 수식어를 쓰지 않으면 안됨.  


#2-2. 상속이라는 것은 무엇인가?
 : 클래스를 가져다가 확장해서 새로운 클래스를 만드는 것
 : 기존의 클래스가 가지고 있는 데이터 구조와 기능을 물려받아서 사용하는 것


#2-3. 다형성이란 무엇인가?
 : 여러 형태를 갖는 성질
	* 변수의 다형성
 	 : 하나의 변수에 여러 종류의 데이터를 대입할 수 있는 성질
	   - 클래스 변수의 다형성 : 클래스는 객체를 생성하는 도구로도 사용되지만 객체의 타입으로도 사용되는데, 자바에서는 클래스 변수에 그 클래스로 만든 객체를 대입할 수 있을 뿐만 아니라 그 클래스의 서브 클래스 객체도 대입할 수 있다. 
	   // 여러 종류의 객체들을 똑같은 로직으로 처리하는 프로그램 작성 가능

		* 메소드 오버라이딩(overriding)
		 : 메소드 재정의
		// 슈퍼클래스의 메소드를 서브클래스에서 같은 인수를 가지며 메소드명가지 같은 메소드를 똑같이 정의하는 것(추상클래스 문법도 동일)
		// 자식 클래스의 객체는 부모 클래스의 동일한 메서드에 대해서 다른 동작을 하여 다형성을 보장한다.

	   - 인터페이스 변수의 다형성 : 인터페이스는 변수의 선언에 사용될 수 있다. 인터페이스 변수에는 그 인터페이스를 구현하는 클래스의 객체라면 어떤 객체든지 다 대입할 수 있다. 

	* 메소드 오버로딩(overloading)
	 : 메소드 중복 정의
	// 한 클래스 내에 똑같은 이름의 메소드를 여러 개 선언 할 수 있음
	// 메소드의 이름은 같더라도 파라미터 변수의 수와 타입을 다르게 선언할 수 있다.
 

